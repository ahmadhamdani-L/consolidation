{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a doc for mcash-console.",
        "title": "MCASH-CONSOLE",
        "contact": {},
        "version": "0.0.1"
    },
    "host": "localhost:3030",
    "basePath": "/",
    "paths": {
        "/access-scope": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Access Scope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope"
                ],
                "summary": "Get Access Scope",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "access_all",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "user_is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Access Scope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope"
                ],
                "summary": "Create Access Scope",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/access-scope-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Access Scope Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope Detail"
                ],
                "summary": "Get Access Scope Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "access_scope_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "PT ABC",
                        "name": "company_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Access Scope Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope Detail"
                ],
                "summary": "Create Access Scope Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/access-scope-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Access Scope Detail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope Detail"
                ],
                "summary": "Get Access Scope Detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Access Scope Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope Detail"
                ],
                "summary": "Delete Access Scope Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Access Scope Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope Detail"
                ],
                "summary": "Update Access Scope Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/access-scope/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Access Scope by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope"
                ],
                "summary": "Get Access Scope by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Access Scope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope"
                ],
                "summary": "Delete Access Scope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Access Scope",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access Scope"
                ],
                "summary": "Update Access Scope",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccessScopeUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/adjustment": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Adjustment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment"
                ],
                "summary": "Get Adjustment",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tb_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "trx_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Adjustment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment"
                ],
                "summary": "Get Adjustment",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/adjustment-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Adjustment Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment Detail"
                ],
                "summary": "Get Adjustment Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "adjustment_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "balance_sheet_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "balance_sheet_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "coa_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "reff_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/adjustment-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Adjustment Detail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment Detail"
                ],
                "summary": "Get Adjustment Detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Adjustment Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment Detail"
                ],
                "summary": "Create Adjustment Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Adjustment Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment Detail"
                ],
                "summary": "Update Adjustment Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/adjustment/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Adjustment Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment"
                ],
                "summary": "Get Adjustment Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/adjustment/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Adjustment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment"
                ],
                "summary": "Get Adjustment by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Adjustment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adjustment"
                ],
                "summary": "Delete Adjustment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdjustmentDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/aging-utang-piutang": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Aging Utang Piutang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang"
                ],
                "summary": "Get Aging Utang Piutang",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/aging-utang-piutang-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Aging Utang Piutang Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang Detail"
                ],
                "summary": "Get Aging Utang Piutang Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "aging_utang_piutang_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "BELUM_JATUH_TEMPO",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Belum jatuh tempo",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutangberelasilongterm",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutangberelasishortterm",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutanglainlongterm3rdparty",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutanglainlongterm_berelasi",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutanglainshortterm3rdparty",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutanglainshortterm_berelasi",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutangusaha3rdparty",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutangusaha_berelasi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utangberelasilongterm",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utangberelasishortterm",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utanglainlongterm3rdparty",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utanglainlongterm_berelasi",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utanglainshortterm3rdparty",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utanglainshortterm_berelasi",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utangusaha3rdparty",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utangusaha_berelasi",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/aging-utang-piutang-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Aging Utang Piutang Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang Detail"
                ],
                "summary": "Get Aging Utang Piutang Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Aging Utang Piutang Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang Detail"
                ],
                "summary": "Delete Aging Utang Piutang Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Aging Utang Piutang Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang Detail"
                ],
                "summary": "Update Aging Utang Piutang Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_berelasi_longterm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_berelasi_shortterm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_lain_longterm_3rdparty",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_lain_shortterm_3rdparty",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_lain_shortterm_berelasi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_lainlongterm_berelasi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_usaha_3rdparty",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "piutang_usaha_berelasi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_berelasi_longterm",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_berelasi_short_term",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_lain_longterm_3rdparty",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_lain_longterm_berelasi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_lain_shortterm_3rdparty",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_lain_shortterm_berelasi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_usaha_3rdparty",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "utang_usaha_berelasi",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/aging-utang-piutang/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Aging Utang Piutang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang"
                ],
                "summary": "Export Aging Utang Piutang",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "aging_utang_piutang_id query",
                        "name": "aging_utang_piutang_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/aging-utang-piutang/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Aging Utang Piutang Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang"
                ],
                "summary": "Get Aging Utang Piutang Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/aging-utang-piutang/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Aging Utang Piutang Get By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang"
                ],
                "summary": "Get Aging Utang Piutang Get By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Aging Utang Piutang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang"
                ],
                "summary": "Delete Aging Utang Piutang",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Aging Utang Piutang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aging Utang Piutang"
                ],
                "summary": "Update Aging Utang Piutang",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get COA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA"
                ],
                "summary": "Get COA",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_coa_group_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "coa_type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "110101003",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "CA / 110101003",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create COA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA"
                ],
                "summary": "Create COA",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CoaCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa-group": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get COA Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA Group"
                ],
                "summary": "Get COA Group",
                "parameters": [
                    {
                        "type": "string",
                        "example": "1000",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Test Group",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGroupGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create COA Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA Group"
                ],
                "summary": "Create COA Group",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGroupCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGroupCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete COA Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA Group"
                ],
                "summary": "Delete COA Group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa-group/{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update COA GROUP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA GROUP"
                ],
                "summary": "Update COA GROUP",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request query",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGroupUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGroupUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa-type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get COA Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA Type"
                ],
                "summary": "Get COA Type",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_coa_group_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "coa_group_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1000",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Test Group",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaTypeGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create COA Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA Type"
                ],
                "summary": "Create COA Type",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CoaTypeCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaTypeCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete COA Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA Type"
                ],
                "summary": "Delete COA Type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa-type/{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update COA GROUP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA GROUP"
                ],
                "summary": "Update COA GROUP",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request query",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CoaTypeUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaTypeUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export COA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA"
                ],
                "summary": "Export COA",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/coa/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get COA by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA"
                ],
                "summary": "Get COA by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete COA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA"
                ],
                "summary": "Delete COA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update COA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "COA"
                ],
                "summary": "Update COA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CoaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/company": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get Company",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "child_company",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "abc",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "PT ABC",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "parent_company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "lutfi",
                        "name": "pic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "with_child",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Create Company",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Delete Company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Company By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get Company By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/company{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update Company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/consolidation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Consolidation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consolidation"
                ],
                "summary": "Get Consolidation",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "consolidation_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ConsolidationGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Request To Consolidation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consolidation"
                ],
                "summary": "Request To Consolidation",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ConsolidationConsolidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ConsolidationConsolidateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/consolidation-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Consolidation Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consolidation Detail"
                ],
                "summary": "Get Consolidation Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_after_jpm",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_before_jpm",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_jpm_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_jpm_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "110101001",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "consolidation_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Kas Kecil",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASSET",
                        "name": "parent",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "parent_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ConsolidationDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/consolidation/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Consolidation Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consolidation"
                ],
                "summary": "Get Consolidation Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/consolidation/list_company/{company_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Consolidation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consolidation"
                ],
                "summary": "Get Consolidation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "trial_balance_id path",
                        "name": "trial_balance_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ConsolidationGetListAvailableResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/consolidation/list_company_duplicate/{consolidation_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Dupliacte Consolidation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consolidation"
                ],
                "summary": "Get Dupliacte Consolidation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "consolidation_id path",
                        "name": "conolidation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "company_id path",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ConsolidationGetListDuplicateAvailableResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/employee-benefit": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee Benefit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit"
                ],
                "summary": "Get Employee Benefit",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/employee-benefit-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee Benefit Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit Detail"
                ],
                "summary": "Get Employee Benefit Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "BELUM_JATUH_TEMPO",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Belum jatuh tempo",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "employee_benefit_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Projected Unit Credit",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/employee-benefit-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee Benefit Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit Detail"
                ],
                "summary": "Get Employee Benefit Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Employee Benefit Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit Detail"
                ],
                "summary": "Delete Employee Benefit Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Employee Benefit Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit Detail"
                ],
                "summary": "Update Employee Benefit Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "10000.00",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/employee-benefit/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Employee Benefit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit"
                ],
                "summary": "Export Employee Benefit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "employee_benefit_id query",
                        "name": "employee_benefit_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/employee-benefit/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee Benefit Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit"
                ],
                "summary": "Get Employee Benefit Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/employee-benefit/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Employee Benefit Get By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit"
                ],
                "summary": "Get Employee Benefit Get By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Employee Benefit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit"
                ],
                "summary": "Delete Employee Benefit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Employee Benefit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee Benefit"
                ],
                "summary": "Update Employee Benefit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeBenefitUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/export/get/{notification_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Bulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "Export Bulk"
                ],
                "summary": "Export Bulk",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "notification_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/export/request": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Bulk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Export Bulk"
                ],
                "summary": "Request Export",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "request",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "versions",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/import/importasync": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Bulk Upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Upload"
                ],
                "summary": "Bulk Upload",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company_id formdata",
                        "name": "company_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "period formdata",
                        "name": "period",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "trial_balance",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "mutasi_fa",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "aging_utang_piutang",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "investasi_tbk",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "investasi_non_tbk",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "mutasi_dta",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "mutasi_ia",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "mutasi_rua",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "mutasi_persediaan",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "pembelian_penjualan_berelasi",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file formdata",
                        "name": "employee_benefit",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/import/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Bulk Upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Upload"
                ],
                "summary": "Bulk Upload",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/imported-worksheet": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ImportedWorksheet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImportedWorksheet"
                ],
                "summary": "Get ImportedWorksheet",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "failed",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "succes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImportedWorksheetGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/imported-worksheet-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ImportedWorksheet Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImportedWorksheet Detail"
                ],
                "summary": "Get ImportedWorksheet Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "imported_worksheet_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImportedWorksheetDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/imported-worksheet-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ImportedWorksheet Detail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImportedWorksheet Detail"
                ],
                "summary": "Get ImportedWorksheet Detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImportedWorksheetDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/imported-worksheet/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ImportedWorksheet by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImportedWorksheet"
                ],
                "summary": "Get ImportedWorksheet by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImportedWorksheetGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-non-tbk": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi Non TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK"
                ],
                "summary": "Get Investasi Non TBK",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-non-tbk-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi Non TBK Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK Detail"
                ],
                "summary": "Get Investasi Non TBK Detail",
                "parameters": [
                    {
                        "type": "string",
                        "example": "A",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "PT A",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1000,
                        "name": "harga_beli",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "harga_par",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "investasi_non_tbk_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10,
                        "name": "lbr_saham_ownership",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 100,
                        "name": "percentage_ownership",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1000,
                        "name": "total_harga_beli",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "total_harga_par",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 100,
                        "name": "total_lbr_saham",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Investasi Non TBK Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK Detail"
                ],
                "summary": "Update Investasi Non TBK Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-non-tbk-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Investasi Non TBK Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK Detail"
                ],
                "summary": "Delete Investasi Non TBK Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-non-tbk/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Investasi Non TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK"
                ],
                "summary": "Export Investasi Non TBK",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "investasi_non_tbk_id query",
                        "name": "investasi_non_tbk_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-non-tbk/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi Non Tbk Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK"
                ],
                "summary": "Get Investasi Non Tbk Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-non-tbk/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi Non TBK By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK"
                ],
                "summary": "Get Investasi Non TBK By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Investasi Non TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK"
                ],
                "summary": "Delete Investasi Non TBK",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Investasi Non TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi Non TBK"
                ],
                "summary": "Update Investasi Non TBK",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-tbk": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK"
                ],
                "summary": "Get Investasi TBK",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-tbk-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi TBK Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK Detail"
                ],
                "summary": "Get Investasi TBK Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_cost",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_fv",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1000,
                        "name": "avg_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "closing_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "ending_shares",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "fee",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "investasi_tbk_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "realized_gain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "BBCA",
                        "name": "stock",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "unrealized_gain",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-tbk-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi TBK Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK Detail"
                ],
                "summary": "Get Investasi TBK Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Investasi TBK Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK Detail"
                ],
                "summary": "Delete Investasi TBK Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Investasi TBK Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK Detail"
                ],
                "summary": "Update Investasi TBK Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-tbk/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Investasi TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK"
                ],
                "summary": "Export Investasi TBK",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "investasi_tbk_id query",
                        "name": "investasi_tbk_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-tbk/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi Tbk Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK"
                ],
                "summary": "Get Investasi Tbk Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/investasi-tbk/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Investasi TBK By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK"
                ],
                "summary": "Get Investasi TBK By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Investasi TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK"
                ],
                "summary": "Delete Investasi TBK",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Investasi TBK",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investasi TBK"
                ],
                "summary": "Update Investasi TBK",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.InvestasiTbkUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jcte": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jcte",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte"
                ],
                "summary": "Get Jcte",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tb_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "trx_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Jcte",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte"
                ],
                "summary": "Get Jcte",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JcteCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jcte-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jcte Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte Detail"
                ],
                "summary": "Get Jcte Detail",
                "parameters": [
                    {
                        "type": "number",
                        "name": "balance_sheet_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "balance_sheet_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "coa_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_dr",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "jcte_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "reff_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Jcte Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte Detail"
                ],
                "summary": "Get Jcte Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jcte-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jcte Detail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte Detail"
                ],
                "summary": "Get Jcte Detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Jcte Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte Detail"
                ],
                "summary": "Update Jcte Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jcte/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Jcte",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte"
                ],
                "summary": "Export Jcte",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jcte/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jcte Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte"
                ],
                "summary": "Get Jcte Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jcte/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jcte by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte"
                ],
                "summary": "Get Jcte by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Jcte",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jcte"
                ],
                "summary": "Delete Jcte",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JcteDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jelim": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jelim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim"
                ],
                "summary": "Get Jelim",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tb_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "trx_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Jelim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim"
                ],
                "summary": "Get Jelim",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JelimCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jelim-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jelim Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim Detail"
                ],
                "summary": "Get Jelim Detail",
                "parameters": [
                    {
                        "type": "number",
                        "name": "balance_sheet_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "balance_sheet_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "coa_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_dr",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "jelim_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "reff_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Jelim Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim Detail"
                ],
                "summary": "Get Jelim Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jelim-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jelim Detail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim Detail"
                ],
                "summary": "Get Jelim Detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Jelim Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim Detail"
                ],
                "summary": "Update Jelim Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jelim/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Jelim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim"
                ],
                "summary": "Export Jelim",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jelim/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jelim Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim"
                ],
                "summary": "Get Jelim Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jelim/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jelim by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim"
                ],
                "summary": "Get Jelim by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Jelim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jelim"
                ],
                "summary": "Delete Jelim",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JelimDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jpm": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jpm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm"
                ],
                "summary": "Get Jpm",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "tb_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "trx_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Jpm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm"
                ],
                "summary": "Get Jpm",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JpmCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jpm-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jpm Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm Detail"
                ],
                "summary": "Get Jpm Detail",
                "parameters": [
                    {
                        "type": "number",
                        "name": "balance_sheet_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "balance_sheet_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "coa_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "income_statement_dr",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "jpm_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "note",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "reff_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create jpm Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jpm Detail"
                ],
                "summary": "Get jpm Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jpm-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jpm Detail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm Detail"
                ],
                "summary": "Get Jpm Detail by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Jpm Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm Detail"
                ],
                "summary": "Update Jpm Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jpm/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Jpm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm"
                ],
                "summary": "Export Jpm",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CoaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jpm/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jpm Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm"
                ],
                "summary": "Get Jpm Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/jpm/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Jpm by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm"
                ],
                "summary": "Get Jpm by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Jpm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jpm"
                ],
                "summary": "Delete Jpm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JpmDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-dta": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi DTA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA"
                ],
                "summary": "Get Mutasi DTA",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-dta-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi DTA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA Detail"
                ],
                "summary": "Get Mutasi DTA Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "akuisisi_entitas_anak",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lain-lain",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lain-lain",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "dibebankan_ke_lr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "dibebankan_ke_oci",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "manfaat_beban_pajak",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "mutasi_dta_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1000,
                        "name": "oci",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "saldo_akhir",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "saldo_awal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-dta-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi DTA Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA Detail"
                ],
                "summary": "Get Mutasi DTA Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi DTA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA Detail"
                ],
                "summary": "Delete Mutasi DTA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi DTA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA Detail"
                ],
                "summary": "Update Mutasi DTA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-dta/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Mutasi DTA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA"
                ],
                "summary": "Export Mutasi DTA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mutasi_dta_id query",
                        "name": "mutasi_dta_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-dta/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi DTA Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA"
                ],
                "summary": "Get Mutasi DTA Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-dta/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi DTA By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA"
                ],
                "summary": "Get Mutasi DTA By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi DTA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA"
                ],
                "summary": "Delete Mutasi DTA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi DTA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi DTA"
                ],
                "summary": "Update Mutasi DTA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiDtaUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-fa": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi FA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA"
                ],
                "summary": "Get Mutasi FA",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-fa-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi FA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA Detail"
                ],
                "summary": "Get Mutasi FA Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "acquisition_of_subsidiary",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "additions",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "beginning_balance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Tanah",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "control",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "deductions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Tanah",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "ending_balance",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "mutasi_fa_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "reclassification",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "revaluation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-fa-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi FA Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA Detail"
                ],
                "summary": "Get Mutasi FA Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi FA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA Detail"
                ],
                "summary": "Delete Mutasi FA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi FA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA Detail"
                ],
                "summary": "Update Mutasi FA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-fa/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Mutasi FA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA"
                ],
                "summary": "Export Mutasi FA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mutasi_fa_id query",
                        "name": "mutasi_fa_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-fa/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi FA Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA"
                ],
                "summary": "Get Mutasi FA Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-fa/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi FA By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA"
                ],
                "summary": "Get Mutasi FA By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi FA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA"
                ],
                "summary": "Delete Mutasi FA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi FA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi FA"
                ],
                "summary": "Update Mutasi FA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiFaUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-ia": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi IA By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA"
                ],
                "summary": "Get Mutasi IA By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi IA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA"
                ],
                "summary": "Delete Mutasi IA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-ia-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi IA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA Detail"
                ],
                "summary": "Get Mutasi IA Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "acquisition_of_subsidiary",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "additions",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "beginning_balance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Software",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "control",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "deductions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Software",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "ending_balance",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "mutasi_ia_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "reclassification",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "revaluation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-ia-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi IA Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA Detail"
                ],
                "summary": "Get Mutasi IA Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi IA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA Detail"
                ],
                "summary": "Delete Mutasi IA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi IA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA Detail"
                ],
                "summary": "Update Mutasi IA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-ia/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Mutasi IA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA"
                ],
                "summary": "Export Mutasi IA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mutasi_ia_id query",
                        "name": "mutasi_ia_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-ia/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi IA Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA"
                ],
                "summary": "Get Mutasi IA Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-ia/{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi IA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi IA"
                ],
                "summary": "Update Mutasi IA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiIaUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-persediaan": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi Persediaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan"
                ],
                "summary": "Get Mutasi Persediaan",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-31",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-persediaan-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi Persediaan Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan Detail"
                ],
                "summary": "Get Mutasi Persediaan Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Saldo_Awal",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Saldo Awal",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "mutasi_persediaan_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-persediaan-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi Persediaan Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan Detail"
                ],
                "summary": "Get Mutasi Persediaan Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi Persediaan Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan Detail"
                ],
                "summary": "Delete Mutasi Persediaan Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi Persediaan Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan Detail"
                ],
                "summary": "Update Mutasi Persediaan Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-persediaan/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Mutasi Persediaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan"
                ],
                "summary": "Export Mutasi Persediaan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mutasi_persediaan_id query",
                        "name": "mutasi_persediaan_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-persediaan/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi Persediaan Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan"
                ],
                "summary": "Get Mutasi Persediaan Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-persediaan/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi Persediaan By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan"
                ],
                "summary": "Get Mutasi Persediaan By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi Persediaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan"
                ],
                "summary": "Delete Mutasi Persediaan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi Persediaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi Persediaan"
                ],
                "summary": "Update Mutasi Persediaan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiPersediaanUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-rua": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi RUA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA"
                ],
                "summary": "Get Mutasi RUA",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-rua-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi RUA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA Detail"
                ],
                "summary": "Get Mutasi RUA Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "acquisition_of_subsidiary",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "additions",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "beginning_balance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Bangunan",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "control",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "deductions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Bangunan",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "ending_balance",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "mutasi_rua_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "reclassification",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "remeasurement",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Mutasi RUA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA Detail"
                ],
                "summary": "Create Mutasi RUA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-rua-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi RUA Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA Detail"
                ],
                "summary": "Get Mutasi RUA Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi RUA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA Detail"
                ],
                "summary": "Delete Mutasi RUA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi RUA Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA Detail"
                ],
                "summary": "Update Mutasi RUA Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-rua/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Mutasi RUA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA"
                ],
                "summary": "Export Mutasi RUA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "mutasi_rua_id query",
                        "name": "mutasi_rua_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-rua/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi RUA Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA"
                ],
                "summary": "Get Mutasi RUA Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/mutasi-rua/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Mutasi RUA By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA"
                ],
                "summary": "Get Mutasi RUA By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Mutasi RUA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA"
                ],
                "summary": "Delete Mutasi RUA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Mutasi RUA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mutasi RUA"
                ],
                "summary": "Update Mutasi RUA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MutasiRuaUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notification",
                "parameters": [
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "data",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "is_opened",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NotificationGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/notification/read/{id}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark As Read Notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Mark As Read Notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NotificationMarkAsReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NotificationMarkAsReadResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/notification/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Notification By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notification By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NotificationGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/parameter": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Get Parameter",
                "parameters": [
                    {
                        "type": "string",
                        "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "numeric",
                        "name": "data_type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "name": "is_editable",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "5",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Create Parameter",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/parameter/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Parameter By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Get Parameter By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Delete Parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Update Parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ParameterUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/pembelian-penjualan-berelasi": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Pembelian Penjualan Berelasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi"
                ],
                "summary": "Get Pembelian Penjualan Berelasi",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/pembelian-penjualan-berelasi-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Pembelian Penjualan Berelasi Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi Detail"
                ],
                "summary": "Get Pembelian Penjualan Berelasi Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "bought_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "001",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "PT ABC",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "pembelian_penjualan_berelasi_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "sales_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "sort_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Pembelian Penjualan Berelasi Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi Detail"
                ],
                "summary": "Create Pembelian Penjualan Berelasi Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/pembelian-penjualan-berelasi-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Pembelian Penjualan Berelasi Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi Detail"
                ],
                "summary": "Get Pembelian Penjualan Berelasi Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Pembelian Penjualan Berelasi Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi Detail"
                ],
                "summary": "Delete Pembelian Penjualan Berelasi Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Pembelian Penjualan Berelasi Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi Detail"
                ],
                "summary": "Update Pembelian Penjualan Berelasi Detail",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/pembelian-penjualan-berelasi/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Pembelian Penjualan Berelasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi"
                ],
                "summary": "Export Pembelian Penjualan Berelasi",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pembelian_penjualan_berelasi_id query",
                        "name": "pembelian_penjualan_berelasi_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/pembelian-penjualan-berelasi/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Pembelian Penjualan Berelasi Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi"
                ],
                "summary": "Get Pembelian Penjualan Berelasi Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/pembelian-penjualan-berelasi/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Pembelian Penjualan Berelasi By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi"
                ],
                "summary": "Get Pembelian Penjualan Berelasi By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Pembelian Penjualan Berelasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi"
                ],
                "summary": "Delete Pembelian Penjualan Berelasi",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Pembelian Penjualan Berelasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pembelian Penjualan Berelasi"
                ],
                "summary": "Update Pembelian Penjualan Berelasi",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "company_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/permission-def": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Permission Def",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Def"
                ],
                "summary": "Get Permission Def",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "allow_create",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": false,
                        "name": "allow_delete",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "allow_read",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "allow_update",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "/trial-balance/create",
                        "name": "api_path_create",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "/trial-balance/delete",
                        "name": "api_path_delete",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "/trial-balance/view",
                        "name": "api_path_read",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "/trial-balance/create",
                        "name": "api_path_update",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TRIAL-BALANCE",
                        "name": "functional_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TRIAL BALANCE",
                        "name": "label",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Permission Def",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Def"
                ],
                "summary": "Create Permission Def",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/permission-def/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Permission Def by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Def"
                ],
                "summary": "Get Permission Def by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Permission Def",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Def"
                ],
                "summary": "Delete Permission Def",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Permission Def",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permission Def"
                ],
                "summary": "Update Permission Def",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDefUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get Role",
                "parameters": [
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RoleGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Create Role",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoleCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RoleCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role-permission": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Role Permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission"
                ],
                "summary": "Get Role Permission",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "create",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "delete",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TRIAL-BALANCE",
                        "name": "functional_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "read",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "update",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Role Permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission"
                ],
                "summary": "Create Role Permission",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role-permission-api": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Role Permission Api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission Api"
                ],
                "summary": "Get Role Permission Api",
                "parameters": [
                    {
                        "type": "string",
                        "example": "GET",
                        "name": "api_method",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "/endpoint/action",
                        "name": "api_path",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Role Permission Api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission Api"
                ],
                "summary": "Create Role Permission Api",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role-permission-api/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Role Permission Api by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission Api"
                ],
                "summary": "Get Role Permission Api by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Role Permission Api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission Api"
                ],
                "summary": "Delete Role Permission Api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Role Permission Api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission Api"
                ],
                "summary": "Update Role Permission Api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionApiUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role-permission/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Role Permission by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission"
                ],
                "summary": "Get Role Permission by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Role Permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission"
                ],
                "summary": "Delete Role Permission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Role Permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role Permission"
                ],
                "summary": "Update Role Permission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RolePermissionUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role/permission/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Delete Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id path",
                        "name": "functional_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RoleDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/role/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Get Role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RoleGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Delete Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RoleDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Update Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoleUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RoleUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/samples": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Get samples",
                "parameters": [
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Create samples",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SampleCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/samples/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Delete samples",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Update samples",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SampleUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/samples/{id}/{child}/{child_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get samples by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Get samples by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/trial-balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Trial Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance"
                ],
                "summary": "Get Trial Balance",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/trial-balance-detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Trial Balance Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance Detail"
                ],
                "summary": "Get Trial Balance Detail",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_after_aje",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_aje_cr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_aje_dr",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10000,
                        "name": "amount_before_aje",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "110101001",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Kas Kecil",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "formatter_bridges_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "reff",
                        "name": "reff_aje_cr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "reff",
                        "name": "reff_aje_dr",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "trial_balance_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/trial-balance-detail/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Trial Balance Detail By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance Detail"
                ],
                "summary": "Get Trial Balance Detail By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Trial Balance Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance Detail"
                ],
                "summary": "Delete Trial Balance Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Trial Balance Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance Detail"
                ],
                "summary": "Update Trial Balance Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/trial-balance/export": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export Trial Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance"
                ],
                "summary": "Export Trial Balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "trial_balance_id query",
                        "name": "trial_balance_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceExportResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/trial-balance/get-version": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Trial Balance Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance"
                ],
                "summary": "Get Trial Balance Version",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetVersionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/trial-balance/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Trial Balance By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance"
                ],
                "summary": "Get Trial Balance By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Trial Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance"
                ],
                "summary": "Delete Trial Balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Trial Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trial Balance"
                ],
                "summary": "Update Trial Balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_role_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "admin@console.code",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/validation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validation"
                ],
                "summary": "Get Validation",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "arr_company_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_operator",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "arr_company_string",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ],
                        "name": "arr_versions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-08-17T15:04:05Z",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2022-01-01",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "FormatterID *int    `query:\"formatter_id\" example:\"1\"`",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_created_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Lutfi Ramadhan",
                        "name": "user_modified_string",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "versions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/validation/list_company/{trial_balance_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validation"
                ],
                "summary": "Get Validation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "trial_balance_id path",
                        "name": "trial_balance_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidationGetListAvailableResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/validation/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Validation By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validation"
                ],
                "summary": "Get Validation By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrialBalanceGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/validation/{trial_balance_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Request To Validate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validation"
                ],
                "summary": "Request To Validate",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "list_to_validate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "validation_master_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidationValidateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "abstraction.PaginationInfo": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "more_records": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string"
                },
                "sort_by": {
                    "type": "string"
                }
            }
        },
        "dto.AccessScopeCreateRequest": {
            "type": "object",
            "required": [
                "access_all",
                "user_id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "company_list": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "total_company": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeCreateResponse": {
            "type": "object",
            "required": [
                "access_all",
                "user_id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "access_scope_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccessScopeDetailEntityModel"
                    }
                },
                "company_list": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "total_company": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeDeleteResponse": {
            "type": "object",
            "required": [
                "access_all",
                "user_id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "access_scope_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccessScopeDetailEntityModel"
                    }
                },
                "company_list": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "total_company": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeDetailCreateRequest": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id"
            ],
            "properties": {
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDetailCreateResponse": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id"
            ],
            "properties": {
                "access_scope": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AccessScopeEntityModel"
                },
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeDetailDeleteResponse": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id"
            ],
            "properties": {
                "access_scope": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AccessScopeEntityModel"
                },
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id"
            ],
            "properties": {
                "access_scope": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AccessScopeEntityModel"
                },
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AccessScopeDetailEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeDetailUpdateRequest": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id",
                "id"
            ],
            "properties": {
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDetailUpdateResponse": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id"
            ],
            "properties": {
                "access_scope": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AccessScopeEntityModel"
                },
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeGetByIDResponse": {
            "type": "object",
            "required": [
                "access_all",
                "user_id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "access_scope_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccessScopeDetailEntityModel"
                    }
                },
                "company_list": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "total_company": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AccessScopeEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AccessScopeUpdateRequest": {
            "type": "object",
            "required": [
                "access_all",
                "company_id",
                "id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "company_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeUpdateResponse": {
            "type": "object",
            "required": [
                "access_all",
                "user_id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "access_scope_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccessScopeDetailEntityModel"
                    }
                },
                "company_list": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "total_company": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AccessScopeUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AccessScopeUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentCreateRequest": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntity"
                    }
                },
                "company_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tb_id": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                }
            }
        },
        "dto.AdjustmentCreateResponse": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntityModel"
                    }
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tb_id": {
                    "type": "integer"
                },
                "trial_balance": {
                    "description": "relations",
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.AdjustmentCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AdjustmentCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentDeleteResponse": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntityModel"
                    }
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tb_id": {
                    "type": "integer"
                },
                "trial_balance": {
                    "description": "relations",
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.AdjustmentDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AdjustmentDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentDetailCreateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntity"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.AdjustmentDetailCreateResponse": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntity"
                    }
                }
            }
        },
        "dto.AdjustmentDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AdjustmentDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentDetailGetByIDResponse": {
            "type": "object",
            "properties": {
                "adjustment": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AdjustmentEntityModel"
                },
                "adjustment_id": {
                    "type": "integer"
                },
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.AdjustmentDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AdjustmentDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AdjustmentDetailEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentDetailUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "adjustment_id": {
                    "type": "integer"
                },
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.AdjustmentDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AdjustmentUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentGetByIDResponse": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntityModel"
                    }
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tb_id": {
                    "type": "integer"
                },
                "trial_balance": {
                    "description": "relations",
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.AdjustmentGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AdjustmentGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AdjustmentEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AdjustmentUpdateResponse": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntityModel"
                    }
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tb_id": {
                    "type": "integer"
                },
                "trial_balance": {
                    "description": "relations",
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.AgingUtangPiutangDeleteResponse": {
            "type": "object"
        },
        "dto.AgingUtangPiutangDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangDetailDeleteResponse": {
            "type": "object"
        },
        "dto.AgingUtangPiutangDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "code",
                "description",
                "formatter_bridges_id",
                "piutang_berelasi_longterm",
                "piutang_berelasi_shortterm",
                "piutang_lain_longterm_3rdparty",
                "piutang_lain_shortterm_3rdparty",
                "piutang_lain_shortterm_berelasi",
                "piutang_lainlongterm_berelasi",
                "piutang_usaha_3rdparty",
                "piutang_usaha_berelasi",
                "sort_id",
                "utang_berelasi_longterm",
                "utang_berelasi_short_term",
                "utang_lain_longterm_3rdparty",
                "utang_lain_longterm_berelasi",
                "utang_lain_shortterm_3rdparty",
                "utang_lain_shortterm_berelasi",
                "utang_usaha_3rdparty",
                "utang_usaha_berelasi"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "BELUM_JATUH_TEMPO"
                },
                "description": {
                    "type": "string",
                    "example": "Belum jatuh tempo"
                },
                "formatter_bridges_id": {
                    "description": "AgingUtangPiutangID          int      `json:\"aging_utang_piutang_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "piutang_berelasi_longterm": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_berelasi_shortterm": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_longterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_shortterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_shortterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lainlongterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_usaha_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_usaha_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "utang_berelasi_longterm": {
                    "type": "number",
                    "example": 10000
                },
                "utang_berelasi_short_term": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_longterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_longterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_shortterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_shortterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "utang_usaha_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_usaha_berelasi": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.AgingUtangPiutangDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.AgingUtangPiutangEntityModel"
                }
            }
        },
        "dto.AgingUtangPiutangDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangDetailUpdateResponse": {
            "type": "object",
            "required": [
                "code",
                "description",
                "formatter_bridges_id",
                "piutang_berelasi_longterm",
                "piutang_berelasi_shortterm",
                "piutang_lain_longterm_3rdparty",
                "piutang_lain_shortterm_3rdparty",
                "piutang_lain_shortterm_berelasi",
                "piutang_lainlongterm_berelasi",
                "piutang_usaha_3rdparty",
                "piutang_usaha_berelasi",
                "sort_id",
                "utang_berelasi_longterm",
                "utang_berelasi_short_term",
                "utang_lain_longterm_3rdparty",
                "utang_lain_longterm_berelasi",
                "utang_lain_shortterm_3rdparty",
                "utang_lain_shortterm_berelasi",
                "utang_usaha_3rdparty",
                "utang_usaha_berelasi"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "BELUM_JATUH_TEMPO"
                },
                "description": {
                    "type": "string",
                    "example": "Belum jatuh tempo"
                },
                "formatter_bridges_id": {
                    "description": "AgingUtangPiutangID          int      `json:\"aging_utang_piutang_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "piutang_berelasi_longterm": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_berelasi_shortterm": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_longterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_shortterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_shortterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lainlongterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_usaha_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_usaha_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "utang_berelasi_longterm": {
                    "type": "number",
                    "example": 10000
                },
                "utang_berelasi_short_term": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_longterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_longterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_shortterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_shortterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "utang_usaha_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_usaha_berelasi": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.AgingUtangPiutangDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.AgingUtangPiutangExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "aging_utang_piutang_detail": {
                    "description": "Formatter               FormatterEntityModel                 `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AgingUtangPiutangDetailFmtEntityModel"
                    }
                },
                "aging_utang_piutang_mutasi_ecl": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AgingUtangPiutangDetailFmtEntityModel"
                    }
                },
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.AgingUtangPiutangGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AgingUtangPiutangEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AgingUtangPiutangUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.AgingUtangPiutangUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "aging_utang_piutang_detail": {
                    "description": "Formatter               FormatterEntityModel                 `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AgingUtangPiutangDetailFmtEntityModel"
                    }
                },
                "aging_utang_piutang_mutasi_ecl": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AgingUtangPiutangDetailFmtEntityModel"
                    }
                },
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.AgingUtangPiutangUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AgingUtangPiutangUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AuthLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.AuthLoginResponse": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "image_profile",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "token": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.AuthLoginResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AuthLoginResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaCreateRequest": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                }
            }
        },
        "dto.CoaCreateResponse": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaTypeEntityModel"
                },
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaDeleteResponse": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaTypeEntityModel"
                },
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaExportResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                }
            }
        },
        "dto.CoaExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaGetByIDResponse": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaTypeEntityModel"
                },
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CoaEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaGroupCreateRequest": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                }
            }
        },
        "dto.CoaGroupCreateResponse": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoaTypeEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaGroupCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaGroupCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaGroupGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CoaGroupEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaGroupUpdateRequest": {
            "type": "object",
            "required": [
                "code",
                "id",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                }
            }
        },
        "dto.CoaGroupUpdateResponse": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoaTypeEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaGroupUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaGroupUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaTypeCreateRequest": {
            "type": "object",
            "required": [
                "coa_group_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_group_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                }
            }
        },
        "dto.CoaTypeCreateResponse": {
            "type": "object",
            "required": [
                "coa_group_id",
                "code",
                "name"
            ],
            "properties": {
                "coa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoaEntityModel"
                    }
                },
                "coa_group": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaGroupEntityModel"
                },
                "coa_group_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaTypeCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaTypeCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaTypeGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CoaTypeEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaTypeUpdateRequest": {
            "type": "object",
            "required": [
                "coa_group_id",
                "code",
                "id",
                "name"
            ],
            "properties": {
                "coa_group_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                }
            }
        },
        "dto.CoaTypeUpdateResponse": {
            "type": "object",
            "required": [
                "coa_group_id",
                "code",
                "name"
            ],
            "properties": {
                "coa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoaEntityModel"
                    }
                },
                "coa_group": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaGroupEntityModel"
                },
                "coa_group_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaTypeUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaTypeUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CoaUpdateRequest": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "id",
                "name"
            ],
            "properties": {
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                }
            }
        },
        "dto.CoaUpdateResponse": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaTypeEntityModel"
                },
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CoaUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CoaUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CompanyCreateRequest": {
            "type": "object",
            "required": [
                "code",
                "name",
                "pic"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "abc"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "parent_company_id": {
                    "type": "integer",
                    "example": 1
                },
                "pic": {
                    "type": "string",
                    "example": "lutfi ramadhan"
                }
            }
        },
        "dto.CompanyCreateResponse": {
            "type": "object",
            "required": [
                "code",
                "name",
                "pic"
            ],
            "properties": {
                "child_company": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CompanyEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "abc"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "parent_company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "parent_company_id": {
                    "type": "integer",
                    "example": 1
                },
                "pic": {
                    "type": "string",
                    "example": "lutfi ramadhan"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CompanyCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CompanyCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CompanyDeleteResponse": {
            "type": "object"
        },
        "dto.CompanyDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CompanyDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CompanyGetByIDResponse": {
            "type": "object",
            "required": [
                "code",
                "name",
                "pic"
            ],
            "properties": {
                "child_company": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CompanyEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "abc"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "parent_company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "parent_company_id": {
                    "type": "integer",
                    "example": 1
                },
                "pic": {
                    "type": "string",
                    "example": "lutfi ramadhan"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CompanyGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CompanyGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CompanyGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CompanyEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CompanyUpdateRequest": {
            "type": "object",
            "required": [
                "code",
                "id",
                "name",
                "pic"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "abc"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "parent_company_id": {
                    "type": "integer",
                    "example": 1
                },
                "pic": {
                    "type": "string",
                    "example": "lutfi ramadhan"
                }
            }
        },
        "dto.CompanyUpdateResponse": {
            "type": "object",
            "required": [
                "code",
                "name",
                "pic"
            ],
            "properties": {
                "child_company": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CompanyEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "abc"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "parent_company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "parent_company_id": {
                    "type": "integer",
                    "example": 1
                },
                "pic": {
                    "type": "string",
                    "example": "lutfi ramadhan"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.CompanyUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CompanyUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ConsolidationConsolidateRequest": {
            "type": "object",
            "required": [
                "list_to_consolidation",
                "tb_id"
            ],
            "properties": {
                "list_to_consolidation": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tb_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ConsolidationConsolidateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "consolidation_versions",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "consolidation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ConsolidationDetailEntityModel"
                    }
                },
                "consolidation_versions": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_duplicate": {
                    "type": "boolean"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.ConsolidationConsolidateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ConsolidationConsolidateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ConsolidationDetailGetResponse": {
            "type": "object",
            "properties": {
                "anak_usaha": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ConsolidationBridgeEntityModel"
                    }
                },
                "datas": {
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.ConsolidationDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ConsolidationDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ConsolidationGetListAvaibleResponse": {
            "type": "object",
            "properties": {
                "child": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceEntityModel"
                    }
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                },
                "parent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceEntityModel"
                    }
                }
            }
        },
        "dto.ConsolidationGetListAvailableResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ConsolidationGetListAvaibleResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ConsolidationGetListDuplicateAvaibleResponse": {
            "type": "object",
            "properties": {
                "child": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceEntityModel"
                    }
                },
                "consolidation_child": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceEntityModel"
                    }
                },
                "consolidation_parent": {
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                },
                "parent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceEntityModel"
                    }
                }
            }
        },
        "dto.ConsolidationGetListDuplicateAvailableResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ConsolidationGetListDuplicateAvaibleResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ConsolidationGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ConsolidationEntityModel"
                    }
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.ConsolidationGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ConsolidationGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitDeleteResponse": {
            "type": "object"
        },
        "dto.EmployeeBenefitDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitDetailDeleteResponse": {
            "type": "object"
        },
        "dto.EmployeeBenefitDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "description",
                "formatter_bridges_id",
                "is_value",
                "sort_id",
                "value"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "BELUM_JATUH_TEMPO"
                },
                "description": {
                    "type": "string",
                    "example": "Belum jatuh tempo"
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "is_value": {
                    "type": "boolean"
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.EmployeeBenefitDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.EmployeeBenefitEntityModel"
                }
            }
        },
        "dto.EmployeeBenefitDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitDetailUpdateResponse": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "description",
                "formatter_bridges_id",
                "is_value",
                "sort_id",
                "value"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "BELUM_JATUH_TEMPO"
                },
                "description": {
                    "type": "string",
                    "example": "Belum jatuh tempo"
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "is_value": {
                    "type": "boolean"
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.EmployeeBenefitDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.EmployeeBenefitExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "employee_benefit_detail_analisis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_asumsi": {
                    "description": "Formatter               FormatterEntityModel                 `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_informasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_mutasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rekonsiliasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rincian_ekuitas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rincian_laporan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.EmployeeBenefitGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.EmployeeBenefitEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.EmployeeBenefitUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.EmployeeBenefitUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "employee_benefit_detail_analisis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_asumsi": {
                    "description": "Formatter               FormatterEntityModel                 `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_informasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_mutasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rekonsiliasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rincian_ekuitas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rincian_laporan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.EmployeeBenefitUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.EmployeeBenefitUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FormatterEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.GetVersionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GetVersionModel"
                }
            }
        },
        "dto.GetVersionResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.GetVersionResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ImportedWorksheetDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "code",
                "imported_worksheet_id",
                "name",
                "status"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imported_worksheet_id": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.ImportedWorksheetEntityModel"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dto.ImportedWorksheetDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ImportedWorksheetDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ImportedWorksheetDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ImportedWorksheetDetailEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ImportedWorksheetGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imported_worksheet_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ImportedWorksheetDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer"
                }
            }
        },
        "dto.ImportedWorksheetGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ImportedWorksheetGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ImportedWorksheetGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ImportedWorksheetEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkDeleteResponse": {
            "type": "object"
        },
        "dto.InvestasiNonTbkDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkDetailDeleteResponse": {
            "type": "object",
            "required": [
                "code",
                "description",
                "harga_beli",
                "harga_par",
                "investasi_non_tbk_id",
                "lbr_saham_ownership",
                "percentage_ownership",
                "sort_id",
                "total_harga_beli",
                "total_harga_par",
                "total_lbr_saham"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "A"
                },
                "description": {
                    "type": "string",
                    "example": "PT A"
                },
                "harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.InvestasiNonTbkEntityModel"
                },
                "investasi_non_tbk_id": {
                    "description": "FormatterBridgesID int `json:\"formatter_bridges_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "lbr_saham_ownership": {
                    "type": "number",
                    "example": 10
                },
                "percentage_ownership": {
                    "type": "number",
                    "example": 10
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "total_harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "total_harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "total_lbr_saham": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiNonTbkDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "code",
                "description",
                "harga_beli",
                "harga_par",
                "investasi_non_tbk_id",
                "lbr_saham_ownership",
                "percentage_ownership",
                "sort_id",
                "total_harga_beli",
                "total_harga_par",
                "total_lbr_saham"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "A"
                },
                "description": {
                    "type": "string",
                    "example": "PT A"
                },
                "harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.InvestasiNonTbkEntityModel"
                },
                "investasi_non_tbk_id": {
                    "description": "FormatterBridgesID int `json:\"formatter_bridges_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "lbr_saham_ownership": {
                    "type": "number",
                    "example": 10
                },
                "percentage_ownership": {
                    "type": "number",
                    "example": 10
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "total_harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "total_harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "total_lbr_saham": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiNonTbkDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.InvestasiNonTbkEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.InvestasiNonTbkDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkDetailUpdateRequest": {
            "type": "object",
            "required": [
                "harga_beli",
                "harga_par",
                "id",
                "lbr_saham_ownership",
                "total_lbr_saham"
            ],
            "properties": {
                "harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "lbr_saham_ownership": {
                    "type": "number",
                    "example": 10
                },
                "total_lbr_saham": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiNonTbkDetailUpdateResponse": {
            "type": "object",
            "required": [
                "code",
                "description",
                "harga_beli",
                "harga_par",
                "investasi_non_tbk_id",
                "lbr_saham_ownership",
                "percentage_ownership",
                "sort_id",
                "total_harga_beli",
                "total_harga_par",
                "total_lbr_saham"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "A"
                },
                "description": {
                    "type": "string",
                    "example": "PT A"
                },
                "harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.InvestasiNonTbkEntityModel"
                },
                "investasi_non_tbk_id": {
                    "description": "FormatterBridgesID int `json:\"formatter_bridges_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "lbr_saham_ownership": {
                    "type": "number",
                    "example": 10
                },
                "percentage_ownership": {
                    "type": "number",
                    "example": 10
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "total_harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "total_harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "total_lbr_saham": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiNonTbkDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.InvestasiNonTbkExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvestasiNonTbkDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.InvestasiNonTbkGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.InvestasiNonTbkEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiNonTbkUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.InvestasiNonTbkUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvestasiNonTbkDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.InvestasiNonTbkUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiNonTbkUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkDeleteResponse": {
            "type": "object"
        },
        "dto.InvestasiTbkDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkDetailDeleteResponse": {
            "type": "object",
            "required": [
                "amount_cost",
                "amount_fv",
                "avg_price",
                "closing_price",
                "ending_shares",
                "fee",
                "formatter_bridges_id",
                "realized_gain",
                "sort_id",
                "stock",
                "unrealized_gain"
            ],
            "properties": {
                "amount_cost": {
                    "type": "number",
                    "example": 10000
                },
                "amount_fv": {
                    "type": "number",
                    "example": 10000
                },
                "avg_price": {
                    "type": "number",
                    "example": 1000
                },
                "closing_price": {
                    "type": "number",
                    "example": 10000
                },
                "ending_shares": {
                    "type": "number",
                    "example": 10000
                },
                "fee": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "realized_gain": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "stock": {
                    "description": "InvestasiTbkID int      `json:\"investasi_tbk_id\" validate:\"required\" example:\"1\"`",
                    "type": "string",
                    "example": "BBCA"
                },
                "unrealized_gain": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiTbkDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "amount_cost",
                "amount_fv",
                "avg_price",
                "closing_price",
                "ending_shares",
                "fee",
                "formatter_bridges_id",
                "realized_gain",
                "sort_id",
                "stock",
                "unrealized_gain"
            ],
            "properties": {
                "amount_cost": {
                    "type": "number",
                    "example": 10000
                },
                "amount_fv": {
                    "type": "number",
                    "example": 10000
                },
                "avg_price": {
                    "type": "number",
                    "example": 1000
                },
                "closing_price": {
                    "type": "number",
                    "example": 10000
                },
                "ending_shares": {
                    "type": "number",
                    "example": 10000
                },
                "fee": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "realized_gain": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "stock": {
                    "description": "InvestasiTbkID int      `json:\"investasi_tbk_id\" validate:\"required\" example:\"1\"`",
                    "type": "string",
                    "example": "BBCA"
                },
                "unrealized_gain": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiTbkDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "type": "object",
                    "properties": {
                        "investasi_tbk": {
                            "$ref": "#/definitions/model.InvestasiTbkEntityModel"
                        },
                        "total_amount_cost": {
                            "type": "number"
                        },
                        "total_amount_fv": {
                            "type": "number"
                        },
                        "total_fee": {
                            "type": "number"
                        },
                        "total_realized_gain": {
                            "type": "number"
                        },
                        "total_unrealized_gain": {
                            "type": "number"
                        }
                    }
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.InvestasiTbkDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkDetailUpdateRequest": {
            "type": "object",
            "required": [
                "avg_price",
                "closing_price",
                "ending_shares",
                "fee",
                "id",
                "realized_gain"
            ],
            "properties": {
                "avg_price": {
                    "type": "number",
                    "example": 1000
                },
                "closing_price": {
                    "type": "number",
                    "example": 10000
                },
                "ending_shares": {
                    "type": "number",
                    "example": 10000
                },
                "fee": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "realized_gain": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiTbkDetailUpdateResponse": {
            "type": "object",
            "required": [
                "amount_cost",
                "amount_fv",
                "avg_price",
                "closing_price",
                "ending_shares",
                "fee",
                "formatter_bridges_id",
                "realized_gain",
                "sort_id",
                "stock",
                "unrealized_gain"
            ],
            "properties": {
                "amount_cost": {
                    "type": "number",
                    "example": 10000
                },
                "amount_fv": {
                    "type": "number",
                    "example": 10000
                },
                "avg_price": {
                    "type": "number",
                    "example": 1000
                },
                "closing_price": {
                    "type": "number",
                    "example": 10000
                },
                "ending_shares": {
                    "type": "number",
                    "example": 10000
                },
                "fee": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "realized_gain": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "stock": {
                    "description": "InvestasiTbkID int      `json:\"investasi_tbk_id\" validate:\"required\" example:\"1\"`",
                    "type": "string",
                    "example": "BBCA"
                },
                "unrealized_gain": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.InvestasiTbkDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.InvestasiTbkExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "investasi_tbk_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvestasiTbkDetailFmtEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.InvestasiTbkGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.InvestasiTbkEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.InvestasiTbkUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.InvestasiTbkUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "investasi_tbk_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvestasiTbkDetailFmtEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.InvestasiTbkUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.InvestasiTbkUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteCreateRequest": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntity"
                    }
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                }
            }
        },
        "dto.JcteCreateResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JcteCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteDeleteResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JcteDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteDetailCreateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntity"
                    }
                }
            }
        },
        "dto.JcteDetailCreateResponse": {
            "type": "object",
            "properties": {
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntity"
                    }
                }
            }
        },
        "dto.JcteDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteDetailGetByIDResponse": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jcte": {
                    "description": "relations",
                    "$ref": "#/definitions/model.JcteEntityModel"
                },
                "jcte_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.JcteDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JcteDetailEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteDetailUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jcte_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.JcteDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteGetByIDResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JcteGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JcteEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JcteUpdateResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JelimCreateRequest": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntity"
                    }
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                }
            }
        },
        "dto.JelimCreateResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JelimCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JelimCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimDeleteResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JelimDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JelimDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimDetailCreateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntity"
                    }
                }
            }
        },
        "dto.JelimDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimDetailGetByIDResponse": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jelim": {
                    "description": "relations",
                    "$ref": "#/definitions/model.JelimEntityModel"
                },
                "jelim_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.JelimDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JelimDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JelimDetailEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimDetailUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jelim_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.JelimDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JelimUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimGetByIDResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JelimGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JelimGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JelimEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JelimUpdateResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JpmCreateRequest": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntity"
                    }
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                }
            }
        },
        "dto.JpmCreateResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JpmCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JpmCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmDeleteResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JpmDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JpmDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmDetailCreateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntity"
                    }
                }
            }
        },
        "dto.JpmDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JcteDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmDetailGetByIDResponse": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jpm": {
                    "description": "relations",
                    "$ref": "#/definitions/model.JpmEntityModel"
                },
                "jpm_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.JpmDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JpmDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JpmDetailEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmDetailUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jpm_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "dto.JpmDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JpmUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmGetByIDResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.JpmGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.JpmGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JpmEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.JpmUpdateResponse": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.MutasiDtaDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiDtaDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaDetailDeleteResponse": {
            "type": "object",
            "required": [
                "akuisisi_entitas_anak",
                "code",
                "description",
                "dibebankan_ke_lr",
                "dibebankan_ke_oci",
                "formatter_bridges_id",
                "manfaat_beban_pajak",
                "oci",
                "saldo_akhir",
                "saldo_awal",
                "sort_id"
            ],
            "properties": {
                "akuisisi_entitas_anak": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "description": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "dibebankan_ke_lr": {
                    "type": "number",
                    "example": 10000
                },
                "dibebankan_ke_oci": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiDtaID         int      `json:\"mutasi_dta_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "manfaat_beban_pajak": {
                    "type": "number",
                    "example": 10000
                },
                "oci": {
                    "type": "number",
                    "example": 1000
                },
                "saldo_akhir": {
                    "type": "number",
                    "example": 10000
                },
                "saldo_awal": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiDtaDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "akuisisi_entitas_anak",
                "code",
                "description",
                "dibebankan_ke_lr",
                "dibebankan_ke_oci",
                "formatter_bridges_id",
                "manfaat_beban_pajak",
                "oci",
                "saldo_akhir",
                "saldo_awal",
                "sort_id"
            ],
            "properties": {
                "akuisisi_entitas_anak": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "description": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "dibebankan_ke_lr": {
                    "type": "number",
                    "example": 10000
                },
                "dibebankan_ke_oci": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiDtaID         int      `json:\"mutasi_dta_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "manfaat_beban_pajak": {
                    "type": "number",
                    "example": 10000
                },
                "oci": {
                    "type": "number",
                    "example": 1000
                },
                "saldo_akhir": {
                    "type": "number",
                    "example": 10000
                },
                "saldo_awal": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiDtaDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.MutasiDtaEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.MutasiDtaDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaDetailUpdateRequest": {
            "type": "object",
            "required": [
                "akuisisi_entitas_anak",
                "dibebankan_ke_lr",
                "dibebankan_ke_oci",
                "id",
                "manfaat_beban_pajak",
                "oci",
                "saldo_awal"
            ],
            "properties": {
                "akuisisi_entitas_anak": {
                    "type": "number",
                    "example": 10000
                },
                "dibebankan_ke_lr": {
                    "type": "number",
                    "example": 10000
                },
                "dibebankan_ke_oci": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "manfaat_beban_pajak": {
                    "type": "number",
                    "example": 10000
                },
                "oci": {
                    "type": "number",
                    "example": 1000
                },
                "saldo_awal": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiDtaDetailUpdateResponse": {
            "type": "object",
            "required": [
                "akuisisi_entitas_anak",
                "code",
                "description",
                "dibebankan_ke_lr",
                "dibebankan_ke_oci",
                "formatter_bridges_id",
                "manfaat_beban_pajak",
                "oci",
                "saldo_akhir",
                "saldo_awal",
                "sort_id"
            ],
            "properties": {
                "akuisisi_entitas_anak": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "description": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "dibebankan_ke_lr": {
                    "type": "number",
                    "example": 10000
                },
                "dibebankan_ke_oci": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiDtaID         int      `json:\"mutasi_dta_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "manfaat_beban_pajak": {
                    "type": "number",
                    "example": 10000
                },
                "oci": {
                    "type": "number",
                    "example": 1000
                },
                "saldo_akhir": {
                    "type": "number",
                    "example": 10000
                },
                "saldo_awal": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiDtaDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.MutasiDtaExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_dta_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiDtaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiDtaGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MutasiDtaEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiDtaUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiDtaUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_dta_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiDtaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiDtaUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiDtaUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiFaDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaDetailDeleteResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Tanah"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Tanah"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiFaID              int      `json:\"mutasi_Fa_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiFaDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Tanah"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Tanah"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiFaID              int      `json:\"mutasi_Fa_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiFaDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.MutasiFaEntityModel"
                }
            }
        },
        "dto.MutasiFaDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaDetailUpdateRequest": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "beginning_balance",
                "deductions",
                "id",
                "reclassification",
                "revaluation"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "beginning_balance": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiFaDetailUpdateResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Tanah"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Tanah"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiFaID              int      `json:\"mutasi_Fa_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiFaDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.MutasiFaExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_fa_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiFaDetailFmtEntityModel"
                    }
                },
                "mutasi_fa_cost_detail": {
                    "description": "Formatter FormatterEntityModel `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiFaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiFaGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MutasiFaEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiFaUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiFaUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_fa_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiFaDetailFmtEntityModel"
                    }
                },
                "mutasi_fa_cost_detail": {
                    "description": "Formatter FormatterEntityModel `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiFaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiFaUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiFaUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiIaDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Software"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Software"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiIaID              int      `json:\"mutasi_ia_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiIaDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.MutasiIaEntityModel"
                }
            }
        },
        "dto.MutasiIaDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaDetailUpdateRequest": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "deductions",
                "id",
                "reclassification",
                "revaluation",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiIaDetailUpdateResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Software"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Software"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiIaID              int      `json:\"mutasi_ia_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiIaDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.MutasiIaExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_ia_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiIaDetailFmtEntityModel"
                    }
                },
                "mutasi_ia_cost_detail": {
                    "description": "Formatter      FormatterEntityModel        `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiIaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiIaGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MutasiIaEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiIaUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiIaUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_ia_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiIaDetailFmtEntityModel"
                    }
                },
                "mutasi_ia_cost_detail": {
                    "description": "Formatter      FormatterEntityModel        `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiIaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiIaUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiIaUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiPersediaanDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanDetailDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiPersediaanDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "description",
                "formatter_bridges_id",
                "sort_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Saldo_Awal"
                },
                "description": {
                    "type": "string",
                    "example": "Saldo Awal"
                },
                "formatter_bridges_id": {
                    "description": "MutasiPersediaanID int      `json:\"mutasi_persediaan_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiPersediaanDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.MutasiPersediaanEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.MutasiPersediaanDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanDetailUpdateRequest": {
            "type": "object",
            "required": [
                "amount",
                "id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.MutasiPersediaanDetailUpdateResponse": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "description",
                "formatter_bridges_id",
                "sort_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Saldo_Awal"
                },
                "description": {
                    "type": "string",
                    "example": "Saldo Awal"
                },
                "formatter_bridges_id": {
                    "description": "MutasiPersediaanID int      `json:\"mutasi_persediaan_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiPersediaanDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.MutasiPersediaanExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_cadangan_penghapusan_persediaan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiPersediaanDetailFmtEntityModel"
                    }
                },
                "mutasi_persediaan_detail": {
                    "description": "Formatter              FormatterEntityModel                `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiPersediaanDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiPersediaanGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MutasiPersediaanEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiPersediaanUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiPersediaanUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_cadangan_penghapusan_persediaan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiPersediaanDetailFmtEntityModel"
                    }
                },
                "mutasi_persediaan_detail": {
                    "description": "Formatter              FormatterEntityModel                `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiPersediaanDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiPersediaanUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiPersediaanUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiRuaDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaDetailCreateRequest": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "remeasurement",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiRuaID             int      `json:\"mutasi_rua_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "remeasurement": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiRuaDetailCreateResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "remeasurement",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiRuaID             int      `json:\"mutasi_rua_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "remeasurement": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiRuaDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaDetailDeleteResponse": {
            "type": "object"
        },
        "dto.MutasiRuaDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "remeasurement",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiRuaID             int      `json:\"mutasi_rua_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "remeasurement": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiRuaDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.MutasiRuaEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.MutasiRuaDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaDetailUpdateRequest": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "deductions",
                "id",
                "reclassification",
                "remeasurement",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "remeasurement": {
                    "type": "number",
                    "example": 10000
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiRuaDetailUpdateResponse": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "remeasurement",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiRuaID             int      `json:\"mutasi_rua_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "remeasurement": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.MutasiRuaDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.MutasiRuaExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MutasiRuaEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.MutasiRuaUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiRuaUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_rua_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiRuaDetailFmtEntityModel"
                    }
                },
                "mutasi_rua_cost_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiRuaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.MutasiRuaUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.MutasiRuaUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.NotificationGetByIDResponse": {
            "type": "object",
            "required": [
                "data",
                "description",
                "is_open"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_open": {
                    "type": "boolean"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.NotificationGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.NotificationGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.NotificationGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.NotificationEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.NotificationMarkAsReadRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.NotificationMarkAsReadResponse": {
            "type": "object",
            "required": [
                "data",
                "description",
                "is_open"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_open": {
                    "type": "boolean"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.NotificationMarkAsReadResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.NotificationMarkAsReadResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ParameterCreateRequest": {
            "type": "object",
            "required": [
                "code",
                "data_type",
                "is_editable",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START"
                },
                "data_type": {
                    "type": "string",
                    "example": "numeric"
                },
                "is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "value": {
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "dto.ParameterCreateResponse": {
            "type": "object",
            "required": [
                "code",
                "data_type",
                "is_editable",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data_type": {
                    "type": "string",
                    "example": "numeric"
                },
                "id": {
                    "type": "integer"
                },
                "is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "dto.ParameterCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ParameterCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ParameterDeleteResponse": {
            "type": "object"
        },
        "dto.ParameterDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ParameterDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ParameterGetByIDResponse": {
            "type": "object",
            "required": [
                "code",
                "data_type",
                "is_editable",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data_type": {
                    "type": "string",
                    "example": "numeric"
                },
                "id": {
                    "type": "integer"
                },
                "is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "dto.ParameterGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ParameterGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ParameterGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ParameterEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ParameterUpdateRequest": {
            "type": "object",
            "required": [
                "code",
                "data_type",
                "id",
                "is_editable",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START"
                },
                "data_type": {
                    "type": "string",
                    "example": "numeric"
                },
                "id": {
                    "type": "integer"
                },
                "is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "value": {
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "dto.ParameterUpdateResponse": {
            "type": "object",
            "required": [
                "code",
                "data_type",
                "is_editable",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data_type": {
                    "type": "string",
                    "example": "numeric"
                },
                "id": {
                    "type": "integer"
                },
                "is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "dto.ParameterUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ParameterUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDeleteResponse": {
            "type": "object"
        },
        "dto.PembelianPenjualanBerelasiDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailCreateRequest": {
            "type": "object",
            "required": [
                "bought_amount",
                "code",
                "description",
                "pembelian_penjualan_berelasi_id",
                "sales_amount",
                "sort_id"
            ],
            "properties": {
                "bought_amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "001"
                },
                "description": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "pembelian_penjualan_berelasi_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_amount": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailCreateResponse": {
            "type": "object",
            "required": [
                "bought_amount",
                "code",
                "description",
                "pembelian_penjualan_berelasi_id",
                "sales_amount",
                "sort_id"
            ],
            "properties": {
                "bought_amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "001"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "description": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "id": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_amount": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailDeleteResponse": {
            "type": "object"
        },
        "dto.PembelianPenjualanBerelasiDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "bought_amount",
                "code",
                "description",
                "pembelian_penjualan_berelasi_id",
                "sales_amount",
                "sort_id"
            ],
            "properties": {
                "bought_amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "001"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "description": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "id": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_amount": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "type": "object",
                    "properties": {
                        "pembelian_penjualan_berelasi": {
                            "$ref": "#/definitions/model.PembelianPenjualanBerelasiEntityModel"
                        },
                        "total_pembelian": {
                            "type": "number"
                        },
                        "total_penjualan": {
                            "type": "number"
                        }
                    }
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailUpdateRequest": {
            "type": "object",
            "required": [
                "bought_amount",
                "id",
                "sales_amount"
            ],
            "properties": {
                "bought_amount": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "sales_amount": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailUpdateResponse": {
            "type": "object",
            "required": [
                "bought_amount",
                "code",
                "description",
                "pembelian_penjualan_berelasi_id",
                "sales_amount",
                "sort_id"
            ],
            "properties": {
                "bought_amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "001"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "description": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "id": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_amount": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PembelianPenjualanBerelasiDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.PembelianPenjualanBerelasiExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PembelianPenjualanBerelasiDetailEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PembelianPenjualanBerelasiGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PembelianPenjualanBerelasiEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PembelianPenjualanBerelasiUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PembelianPenjualanBerelasiDetailEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.PembelianPenjualanBerelasiUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PembelianPenjualanBerelasiUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PermissionDefCreateRequest": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "functional_id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.PermissionDefCreateResponse": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "role_permissions": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.PermissionDefCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PermissionDefCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PermissionDefDeleteResponse": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "role_permissions": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.PermissionDefDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PermissionDefDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PermissionDefGetByIDResponse": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "role_permissions": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.PermissionDefGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PermissionDefGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PermissionDefGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PermissionDefEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.PermissionDefUpdateRequest": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.PermissionDefUpdateResponse": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "role_permissions": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.PermissionDefUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.PermissionDefUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RoleCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "role_permissions"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role_permissions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "create",
                            "delete",
                            "functional_id",
                            "read",
                            "update"
                        ],
                        "properties": {
                            "create": {
                                "type": "boolean"
                            },
                            "delete": {
                                "type": "boolean"
                            },
                            "functional_id": {
                                "type": "string"
                            },
                            "read": {
                                "type": "boolean"
                            },
                            "update": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "dto.RoleCreateResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "role_permission_api": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionApiEntityModel"
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RoleCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RoleCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RoleDeleteResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "role_permission_api": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionApiEntityModel"
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RoleDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RoleDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RoleGetByIDResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "role_permission_api": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionApiEntityModel"
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RoleGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RoleGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RoleGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RoleEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionApiCreateRequest": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "dto.RolePermissionApiCreateResponse": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "dto.RolePermissionApiCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionApiCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionApiDeleteResponse": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "dto.RolePermissionApiDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionApiDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionApiGetByIDResponse": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "dto.RolePermissionApiGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionApiGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionApiGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RolePermissionApiEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionApiUpdateRequest": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "id",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "dto.RolePermissionApiUpdateResponse": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "dto.RolePermissionApiUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionApiUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionCreateRequest": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                }
            }
        },
        "dto.RolePermissionCreateResponse": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "permissions_def": {
                    "$ref": "#/definitions/model.PermissionDefEntityModel"
                },
                "read": {
                    "type": "boolean"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RolePermissionCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionDeleteResponse": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "permissions_def": {
                    "$ref": "#/definitions/model.PermissionDefEntityModel"
                },
                "read": {
                    "type": "boolean"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RolePermissionDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionGetByIDResponse": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "permissions_def": {
                    "$ref": "#/definitions/model.PermissionDefEntityModel"
                },
                "read": {
                    "type": "boolean"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RolePermissionGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RolePermissionEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RolePermissionUpdateRequest": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "read": {
                    "type": "boolean"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                }
            }
        },
        "dto.RolePermissionUpdateResponse": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "permissions_def": {
                    "$ref": "#/definitions/model.PermissionDefEntityModel"
                },
                "read": {
                    "type": "boolean"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RolePermissionUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RolePermissionUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.RoleUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "name",
                "role_permissions"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permissions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "create",
                            "delete",
                            "functional_id",
                            "read",
                            "update"
                        ],
                        "properties": {
                            "create": {
                                "type": "boolean"
                            },
                            "delete": {
                                "type": "boolean"
                            },
                            "functional_id": {
                                "type": "string"
                            },
                            "read": {
                                "type": "boolean"
                            },
                            "update": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "dto.RoleUpdateResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "role_permission_api": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionApiEntityModel"
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "dto.RoleUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.RoleUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleCreateRequest": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SampleCreateResponse": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_childs": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SampleCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleDeleteResponse": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_childs": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SampleDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleGetByIDResponse": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_childs": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SampleGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SampleEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleUpdateRequest": {
            "type": "object",
            "required": [
                "id",
                "key",
                "value"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SampleUpdateResponse": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_childs": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.SampleUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceDeleteResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "trial_balance_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter,omitempty\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceDetailFmtEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "validation_note": {
                    "type": "string",
                    "example": "Imbalance"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.TrialBalanceDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceDetailDeleteResponse": {
            "type": "object"
        },
        "dto.TrialBalanceDetailDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceDetailGetByIDResponse": {
            "type": "object",
            "required": [
                "amount_after_aje",
                "amount_aje_cr",
                "amount_aje_dr",
                "amount_before_aje",
                "code",
                "description",
                "formatter_bridges_id",
                "reff_aje_cr",
                "reff_aje_dr"
            ],
            "properties": {
                "amount_after_aje": {
                    "type": "number",
                    "example": 10000
                },
                "amount_aje_cr": {
                    "type": "number",
                    "example": 10000
                },
                "amount_aje_dr": {
                    "type": "number",
                    "example": 10000
                },
                "amount_before_aje": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "110101001"
                },
                "description": {
                    "type": "string",
                    "example": "Kas Kecil"
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "reff_aje_cr": {
                    "type": "string",
                    "example": "reff"
                },
                "reff_aje_dr": {
                    "type": "string",
                    "example": "reff"
                }
            }
        },
        "dto.TrialBalanceDetailGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceDetailGetResponse": {
            "type": "object",
            "properties": {
                "datas": {
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "pagination_info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                }
            }
        },
        "dto.TrialBalanceDetailGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailGetResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceDetailUpdateRequest": {
            "type": "object",
            "required": [
                "amount_before_aje",
                "id"
            ],
            "properties": {
                "amount_before_aje": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.TrialBalanceDetailUpdateResponse": {
            "type": "object",
            "required": [
                "amount_after_aje",
                "amount_aje_cr",
                "amount_aje_dr",
                "amount_before_aje",
                "code",
                "description",
                "formatter_bridges_id",
                "reff_aje_cr",
                "reff_aje_dr"
            ],
            "properties": {
                "amount_after_aje": {
                    "type": "number",
                    "example": 10000
                },
                "amount_aje_cr": {
                    "type": "number",
                    "example": 10000
                },
                "amount_aje_dr": {
                    "type": "number",
                    "example": 10000
                },
                "amount_before_aje": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "110101001"
                },
                "description": {
                    "type": "string",
                    "example": "Kas Kecil"
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "reff_aje_cr": {
                    "type": "string",
                    "example": "reff"
                },
                "reff_aje_dr": {
                    "type": "string",
                    "example": "reff"
                }
            }
        },
        "dto.TrialBalanceDetailUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceDetailUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceExportResponse": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.TrialBalanceExportResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceExportResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "trial_balance_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter,omitempty\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceDetailFmtEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "validation_note": {
                    "type": "string",
                    "example": "Imbalance"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.TrialBalanceGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TrialBalanceEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.TrialBalanceUpdateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "validation_note": {
                    "type": "string",
                    "example": "Imbalance"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.TrialBalanceUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "trial_balance_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter,omitempty\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceDetailFmtEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "validation_note": {
                    "type": "string",
                    "example": "Imbalance"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.TrialBalanceUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.TrialBalanceUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UserCreateRequest": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.UserCreateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "image_profile",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.UserCreateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.UserCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UserDeleteResponse": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "image_profile",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.UserDeleteResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.UserDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UserGetByIDResponse": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "image_profile",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.UserGetByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.UserGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UserGetResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UserUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.UserUpdateResponse": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "image_profile",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "dto.UserUpdateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.UserUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ValidationGetListAvailableResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TrialBalanceEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.ValidationValidateResponse": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "validation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ValidationDetailEntityModel"
                    }
                },
                "versions": {
                    "type": "integer"
                }
            }
        },
        "dto.ValidationValidateResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.ValidationValidateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "model.AccessScopeDetailEntityModel": {
            "type": "object",
            "required": [
                "access_scope_id",
                "company_id"
            ],
            "properties": {
                "access_scope": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AccessScopeEntityModel"
                },
                "access_scope_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.AccessScopeEntityModel": {
            "type": "object",
            "required": [
                "access_all",
                "user_id"
            ],
            "properties": {
                "access_all": {
                    "type": "boolean"
                },
                "access_scope_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AccessScopeDetailEntityModel"
                    }
                },
                "company_list": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "total_company": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.AdjustmentDetailEntity": {
            "type": "object",
            "properties": {
                "adjustment_id": {
                    "type": "integer"
                },
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.AdjustmentDetailEntityModel": {
            "type": "object",
            "properties": {
                "adjustment": {
                    "description": "relations",
                    "$ref": "#/definitions/model.AdjustmentEntityModel"
                },
                "adjustment_id": {
                    "type": "integer"
                },
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.AdjustmentEntityModel": {
            "type": "object",
            "properties": {
                "adjustment_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdjustmentDetailEntityModel"
                    }
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tb_id": {
                    "type": "integer"
                },
                "trial_balance": {
                    "description": "relations",
                    "$ref": "#/definitions/model.TrialBalanceEntityModel"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.AgingUtangPiutangDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "code",
                "description",
                "formatter_bridges_id",
                "piutang_berelasi_longterm",
                "piutang_berelasi_shortterm",
                "piutang_lain_longterm_3rdparty",
                "piutang_lain_shortterm_3rdparty",
                "piutang_lain_shortterm_berelasi",
                "piutang_lainlongterm_berelasi",
                "piutang_usaha_3rdparty",
                "piutang_usaha_berelasi",
                "sort_id",
                "utang_berelasi_longterm",
                "utang_berelasi_short_term",
                "utang_lain_longterm_3rdparty",
                "utang_lain_longterm_berelasi",
                "utang_lain_shortterm_3rdparty",
                "utang_lain_shortterm_berelasi",
                "utang_usaha_3rdparty",
                "utang_usaha_berelasi"
            ],
            "properties": {
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "BELUM_JATUH_TEMPO"
                },
                "control_formula": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Belum jatuh tempo"
                },
                "formatter_bridges_id": {
                    "description": "AgingUtangPiutangID          int      `json:\"aging_utang_piutang_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "piutang_berelasi_longterm": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_berelasi_shortterm": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_longterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_shortterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lain_shortterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_lainlongterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_usaha_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "piutang_usaha_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "utang_berelasi_longterm": {
                    "type": "number",
                    "example": 10000
                },
                "utang_berelasi_short_term": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_longterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_longterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_shortterm_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_lain_shortterm_berelasi": {
                    "type": "number",
                    "example": 10000
                },
                "utang_usaha_3rdparty": {
                    "type": "number",
                    "example": 10000
                },
                "utang_usaha_berelasi": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "model.AgingUtangPiutangEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "aging_utang_piutang_detail": {
                    "description": "Formatter               FormatterEntityModel                 `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AgingUtangPiutangDetailFmtEntityModel"
                    }
                },
                "aging_utang_piutang_mutasi_ecl": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AgingUtangPiutangDetailFmtEntityModel"
                    }
                },
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.CoaEntityModel": {
            "type": "object",
            "required": [
                "coa_type_id",
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaTypeEntityModel"
                },
                "coa_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "110101003"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "CA - Kas Di Tangan - IDR - Kas Akun Digital"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.CoaGroupEntityModel": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "coa_type": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoaTypeEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.CoaTypeEntityModel": {
            "type": "object",
            "required": [
                "coa_group_id",
                "code",
                "name"
            ],
            "properties": {
                "coa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CoaEntityModel"
                    }
                },
                "coa_group": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CoaGroupEntityModel"
                },
                "coa_group_id": {
                    "type": "integer",
                    "example": 1
                },
                "code": {
                    "type": "string",
                    "example": "1000"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Group"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.CompanyEntityModel": {
            "type": "object",
            "required": [
                "code",
                "name",
                "pic"
            ],
            "properties": {
                "child_company": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CompanyEntityModel"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "abc"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "parent_company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "parent_company_id": {
                    "type": "integer",
                    "example": 1
                },
                "pic": {
                    "type": "string",
                    "example": "lutfi ramadhan"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.ConsolidationBridgeEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "consolidation_id",
                "consolidation_versions",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "consolidation_id": {
                    "type": "integer",
                    "example": 1
                },
                "consolidation_versions": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.ConsolidationDetailEntityModel": {
            "type": "object",
            "required": [
                "amount_after_jcte",
                "amount_after_jpm",
                "amount_before_jpm",
                "amount_combine_subsidiary",
                "amount_console",
                "amount_jcte_cr",
                "amount_jcte_dr",
                "amount_jelim_cr",
                "amount_jelim_dr",
                "amount_jpm_cr",
                "amount_jpm_dr",
                "code",
                "consolidation_id",
                "description",
                "sort_id",
                "wp_reff"
            ],
            "properties": {
                "amount_after_jcte": {
                    "type": "number"
                },
                "amount_after_jpm": {
                    "type": "number"
                },
                "amount_before_jpm": {
                    "type": "number"
                },
                "amount_combine_subsidiary": {
                    "type": "number"
                },
                "amount_console": {
                    "type": "number"
                },
                "amount_jcte_cr": {
                    "type": "number"
                },
                "amount_jcte_dr": {
                    "type": "number"
                },
                "amount_jelim_cr": {
                    "type": "number"
                },
                "amount_jelim_dr": {
                    "type": "number"
                },
                "amount_jpm_cr": {
                    "type": "number"
                },
                "amount_jpm_dr": {
                    "type": "number"
                },
                "code": {
                    "type": "string"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "sort_id": {
                    "type": "integer"
                },
                "wp_reff": {
                    "type": "string"
                }
            }
        },
        "model.ConsolidationEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "consolidation_versions",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "consolidation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ConsolidationDetailEntityModel"
                    }
                },
                "consolidation_versions": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_duplicate": {
                    "type": "boolean"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.EmployeeBenefitDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "description",
                "formatter_bridges_id",
                "is_value",
                "sort_id",
                "value"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "BELUM_JATUH_TEMPO"
                },
                "control_formula": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Belum jatuh tempo"
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "is_value": {
                    "type": "boolean"
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.EmployeeBenefitEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "employee_benefit_detail_analisis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_asumsi": {
                    "description": "Formatter               FormatterEntityModel                 `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_informasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_mutasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rekonsiliasi": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rincian_ekuitas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "employee_benefit_detail_rincian_laporan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmployeeBenefitDetailFmtEntityModel"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.FormatterDetailEntityModel": {
            "type": "object",
            "required": [
                "auto_summary",
                "code",
                "company_id",
                "control_formula",
                "formatter_id",
                "fx_summary",
                "is_coa",
                "is_control",
                "is_label",
                "is_total",
                "name"
            ],
            "properties": {
                "auto_summary": {
                    "type": "boolean",
                    "example": false
                },
                "code": {
                    "type": "string",
                    "example": "pihak-berelasi"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "control_formula": {
                    "type": "string",
                    "example": "testing-control"
                },
                "formatter": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.FormatterEntityModel"
                },
                "formatter_id": {
                    "type": "integer",
                    "example": 1
                },
                "fx_summary": {
                    "type": "string",
                    "example": "110501+110502"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "is_coa": {
                    "type": "boolean",
                    "example": false
                },
                "is_control": {
                    "type": "boolean",
                    "example": false
                },
                "is_label": {
                    "type": "boolean",
                    "example": false
                },
                "is_total": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "pihak berelasi"
                }
            }
        },
        "model.FormatterEntityModel": {
            "type": "object",
            "required": [
                "description",
                "formatter_for"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "example": "Template Trial balance"
                },
                "formatter_detail": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FormatterDetailEntityModel"
                    }
                },
                "formatter_for": {
                    "type": "string",
                    "example": "TRIAL-BALANCE"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.GetVersionModel": {
            "type": "object",
            "properties": {
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "model.ImportedWorksheetDetailEntityModel": {
            "type": "object",
            "required": [
                "code",
                "imported_worksheet_id",
                "name",
                "status"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imported_worksheet_id": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.ImportedWorksheetEntityModel"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.ImportedWorksheetEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imported_worksheet_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ImportedWorksheetDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer"
                }
            }
        },
        "model.InvestasiNonTbkDetailEntityModel": {
            "type": "object",
            "required": [
                "code",
                "description",
                "harga_beli",
                "harga_par",
                "investasi_non_tbk_id",
                "lbr_saham_ownership",
                "percentage_ownership",
                "sort_id",
                "total_harga_beli",
                "total_harga_par",
                "total_lbr_saham"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "A"
                },
                "description": {
                    "type": "string",
                    "example": "PT A"
                },
                "harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.InvestasiNonTbkEntityModel"
                },
                "investasi_non_tbk_id": {
                    "description": "FormatterBridgesID int `json:\"formatter_bridges_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "lbr_saham_ownership": {
                    "type": "number",
                    "example": 10
                },
                "percentage_ownership": {
                    "type": "number",
                    "example": 10
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "total_harga_beli": {
                    "type": "number",
                    "example": 10000
                },
                "total_harga_par": {
                    "type": "number",
                    "example": 10000
                },
                "total_lbr_saham": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "model.InvestasiNonTbkEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "investasi_non_tbk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvestasiNonTbkDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.InvestasiTbkDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "amount_cost",
                "amount_fv",
                "avg_price",
                "closing_price",
                "ending_shares",
                "fee",
                "formatter_bridges_id",
                "realized_gain",
                "sort_id",
                "stock",
                "unrealized_gain"
            ],
            "properties": {
                "amount_cost": {
                    "type": "number",
                    "example": 10000
                },
                "amount_fv": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "avg_price": {
                    "type": "number",
                    "example": 1000
                },
                "closing_price": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "ending_shares": {
                    "type": "number",
                    "example": 10000
                },
                "fee": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "realized_gain": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "stock": {
                    "description": "InvestasiTbkID int      `json:\"investasi_tbk_id\" validate:\"required\" example:\"1\"`",
                    "type": "string",
                    "example": "BBCA"
                },
                "unrealized_gain": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "model.InvestasiTbkEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "investasi_tbk_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InvestasiTbkDetailFmtEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.JcteDetailEntity": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jcte_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.JcteDetailEntityModel": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jcte": {
                    "description": "relations",
                    "$ref": "#/definitions/model.JcteEntityModel"
                },
                "jcte_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.JcteEntityModel": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jcte_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JcteDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.JelimDetailEntity": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jelim_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.JelimDetailEntityModel": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jelim": {
                    "description": "relations",
                    "$ref": "#/definitions/model.JelimEntityModel"
                },
                "jelim_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.JelimEntityModel": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jelim_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JelimDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.JpmDetailEntity": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jpm_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.JpmDetailEntityModel": {
            "type": "object",
            "properties": {
                "balance_sheet_cr": {
                    "type": "number"
                },
                "balance_sheet_dr": {
                    "type": "number"
                },
                "coa_code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "income_statement_cr": {
                    "type": "number"
                },
                "income_statement_dr": {
                    "type": "number"
                },
                "jpm": {
                    "description": "relations",
                    "$ref": "#/definitions/model.JpmEntityModel"
                },
                "jpm_id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "reff_number": {
                    "type": "string"
                }
            }
        },
        "model.JpmEntityModel": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer"
                },
                "consolidation": {
                    "description": "relations",
                    "$ref": "#/definitions/model.ConsolidationEntityModel"
                },
                "consolidation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "jpm_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JpmDetailEntityModel"
                    }
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trx_number": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.MutasiDtaDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "akuisisi_entitas_anak",
                "code",
                "description",
                "dibebankan_ke_lr",
                "dibebankan_ke_oci",
                "formatter_bridges_id",
                "manfaat_beban_pajak",
                "oci",
                "saldo_akhir",
                "saldo_awal",
                "sort_id"
            ],
            "properties": {
                "akuisisi_entitas_anak": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "control_formula": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Lain-lain"
                },
                "dibebankan_ke_lr": {
                    "type": "number",
                    "example": 10000
                },
                "dibebankan_ke_oci": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiDtaID         int      `json:\"mutasi_dta_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "manfaat_beban_pajak": {
                    "type": "number",
                    "example": 10000
                },
                "oci": {
                    "type": "number",
                    "example": 1000
                },
                "saldo_akhir": {
                    "type": "number",
                    "example": 10000
                },
                "saldo_awal": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.MutasiDtaEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_dta_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiDtaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.MutasiFaDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "Tanah"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Tanah"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiFaID              int      `json:\"mutasi_Fa_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "model.MutasiFaEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_fa_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiFaDetailFmtEntityModel"
                    }
                },
                "mutasi_fa_cost_detail": {
                    "description": "Formatter FormatterEntityModel `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiFaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"2\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.MutasiIaDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "revaluation",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "Software"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Software"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiIaID              int      `json:\"mutasi_ia_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "revaluation": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "model.MutasiIaEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_ia_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiIaDetailFmtEntityModel"
                    }
                },
                "mutasi_ia_cost_detail": {
                    "description": "Formatter      FormatterEntityModel        `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiIaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.MutasiPersediaanDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "description",
                "formatter_bridges_id",
                "sort_id"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "Saldo_Awal"
                },
                "control_formula": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Saldo Awal"
                },
                "formatter_bridges_id": {
                    "description": "MutasiPersediaanID int      `json:\"mutasi_persediaan_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.MutasiPersediaanEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_cadangan_penghapusan_persediaan": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiPersediaanDetailFmtEntityModel"
                    }
                },
                "mutasi_persediaan_detail": {
                    "description": "Formatter              FormatterEntityModel                `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiPersediaanDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-31"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.MutasiRuaDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "acquisition_of_subsidiary",
                "additions",
                "code",
                "control",
                "deductions",
                "description",
                "ending_balance",
                "formatter_bridges_id",
                "reclassification",
                "remeasurement",
                "sort_id",
                "starting_balance"
            ],
            "properties": {
                "acquisition_of_subsidiary": {
                    "type": "number",
                    "example": 10000
                },
                "additions": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "control": {
                    "type": "number",
                    "example": 10000
                },
                "control_formula": {
                    "type": "string"
                },
                "deductions": {
                    "type": "number",
                    "example": 10000
                },
                "description": {
                    "type": "string",
                    "example": "Bangunan"
                },
                "ending_balance": {
                    "type": "number",
                    "example": 10000
                },
                "formatter_bridges_id": {
                    "description": "MutasiRuaID             int      `json:\"mutasi_rua_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reclassification": {
                    "type": "number",
                    "example": 10000
                },
                "remeasurement": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                },
                "starting_balance": {
                    "type": "number",
                    "example": 10000
                }
            }
        },
        "model.MutasiRuaEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "mutasi_rua_accumulated_depreciation_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiRuaDetailFmtEntityModel"
                    }
                },
                "mutasi_rua_cost_detail": {
                    "description": "Formatter       FormatterEntityModel         `json:\"formatter\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MutasiRuaDetailFmtEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.NotificationEntityModel": {
            "type": "object",
            "required": [
                "data",
                "description",
                "is_open"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_open": {
                    "type": "boolean"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.ParameterEntityModel": {
            "type": "object",
            "required": [
                "code",
                "data_type",
                "is_editable",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "AGING-UTANG-PIUTANG-IMPORT-ROW-START"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "data_type": {
                    "type": "string",
                    "example": "numeric"
                },
                "id": {
                    "type": "integer"
                },
                "is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "example": "5"
                }
            }
        },
        "model.PembelianPenjualanBerelasiDetailEntityModel": {
            "type": "object",
            "required": [
                "bought_amount",
                "code",
                "description",
                "pembelian_penjualan_berelasi_id",
                "sales_amount",
                "sort_id"
            ],
            "properties": {
                "bought_amount": {
                    "type": "number",
                    "example": 10000
                },
                "code": {
                    "type": "string",
                    "example": "001"
                },
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "description": {
                    "type": "string",
                    "example": "PT ABC"
                },
                "id": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_id": {
                    "type": "integer",
                    "example": 1
                },
                "sales_amount": {
                    "type": "number",
                    "example": 10000
                },
                "sort_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.PembelianPenjualanBerelasiEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations\nSampleChilds []SampleChildEntityModel `json:\"sample_childs\" gorm:\"foreignKey:SampleID\"`",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "pembelian_penjualan_berelasi_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PembelianPenjualanBerelasiDetailEntityModel"
                    }
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.PermissionDefEntityModel": {
            "type": "object",
            "required": [
                "allow_create",
                "allow_delete",
                "allow_read",
                "allow_update",
                "api_path-",
                "functional_id",
                "label"
            ],
            "properties": {
                "allow_create": {
                    "type": "boolean"
                },
                "allow_delete": {
                    "type": "boolean"
                },
                "allow_read": {
                    "type": "boolean"
                },
                "allow_update": {
                    "type": "boolean"
                },
                "api_path-": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "role_permissions": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.RoleEntityModel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionEntityModel"
                    }
                },
                "role_permission_api": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.RolePermissionApiEntityModel"
                    }
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UserEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.RolePermissionApiEntityModel": {
            "type": "object",
            "required": [
                "api_method",
                "api_path",
                "role_id"
            ],
            "properties": {
                "api_method": {
                    "type": "string"
                },
                "api_path": {
                    "type": "string"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "model.RolePermissionEntityModel": {
            "type": "object",
            "required": [
                "create",
                "delete",
                "functional_id",
                "read",
                "role_id",
                "update"
            ],
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "delete": {
                    "type": "boolean"
                },
                "functional_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "permissions_def": {
                    "$ref": "#/definitions/model.PermissionDefEntityModel"
                },
                "read": {
                    "type": "boolean"
                },
                "role": {
                    "description": "relations",
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer"
                },
                "update": {
                    "type": "boolean"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                }
            }
        },
        "model.SampleChildEntityModel": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_grand_childs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleGrandChildEntityModel"
                    }
                },
                "sample_id": {
                    "description": "relations",
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.SampleEntityModel": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_childs": {
                    "description": "relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.SampleGrandChildEntityModel": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "sample_child_id": {
                    "description": "relations",
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.TrialBalanceDetailFmtEntityModel": {
            "type": "object",
            "required": [
                "amount_after_aje",
                "amount_aje_cr",
                "amount_aje_dr",
                "amount_before_aje",
                "code",
                "description",
                "formatter_bridges_id",
                "reff_aje_cr",
                "reff_aje_dr"
            ],
            "properties": {
                "amount_after_aje": {
                    "type": "number",
                    "example": 10000
                },
                "amount_aje_cr": {
                    "type": "number",
                    "example": 10000
                },
                "amount_aje_dr": {
                    "type": "number",
                    "example": 10000
                },
                "amount_before_aje": {
                    "type": "number",
                    "example": 10000
                },
                "auto_summary": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string",
                    "example": "110101001"
                },
                "control_formula": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Kas Kecil"
                },
                "formatter_bridges_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "description": "abstraction\nabstraction.Entity",
                    "type": "integer"
                },
                "is_control": {
                    "type": "boolean"
                },
                "is_label": {
                    "type": "boolean"
                },
                "is_total": {
                    "type": "boolean"
                },
                "reff_aje_cr": {
                    "type": "string",
                    "example": "reff"
                },
                "reff_aje_dr": {
                    "type": "string",
                    "example": "reff"
                }
            }
        },
        "model.TrialBalanceEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "versions"
            ],
            "properties": {
                "company": {
                    "description": "relations",
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "period": {
                    "type": "string",
                    "example": "2022-01-01"
                },
                "status": {
                    "description": "FormatterID int    `json:\"formatter_id\" validate:\"required\" example:\"1\"`",
                    "type": "integer",
                    "example": 1
                },
                "trial_balance_detail": {
                    "description": "Formatter          FormatterEntityModel            `json:\"formatter,omitempty\" gorm:\"foreignKey:FormatterID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrialBalanceDetailFmtEntityModel"
                    }
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "validation_note": {
                    "type": "string",
                    "example": "Imbalance"
                },
                "versions": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.UserEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "email",
                "image_profile",
                "is_active",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/model.CompanyEntityModel"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string",
                    "example": "admin@console.code"
                },
                "id": {
                    "description": "abstraction",
                    "type": "integer"
                },
                "image_profile": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Lutfi Ramadhan"
                },
                "password": {
                    "type": "string",
                    "example": "nevemor3"
                },
                "role": {
                    "$ref": "#/definitions/model.RoleEntityModel"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_created": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "administrator"
                }
            }
        },
        "model.ValidationDetailEntityModel": {
            "type": "object",
            "required": [
                "company_id",
                "period",
                "status",
                "validate_by",
                "versions"
            ],
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "user_created": {
                    "type": "string"
                },
                "user_modified": {
                    "type": "string"
                },
                "validate_by": {
                    "type": "integer"
                },
                "versions": {
                    "type": "integer"
                }
            }
        },
        "response.Meta": {
            "type": "object",
            "properties": {
                "info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                },
                "message": {
                    "type": "string",
                    "default": "true"
                },
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "response.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        },
        "response.successResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}